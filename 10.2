import threading
import time


class Knight(threading.Thread):
    def __init__(self, name: str, power: int):
        super().__init__()
        self.name = name
        self.power = power

    def run(self):
        enemies = 100
        days = 0

        print(f"{self.name}, на нас напали!")

        while enemies > 0:
            time.sleep(1)  # 1 день = 1 секунда
            days += 1
            enemies = max(0, enemies - self.power)  # Защита от отрицательных значений

            status = (
                f"{self.name} одержал победу спустя {days} дней(дня)!"
                if enemies == 0 else
                f"{self.name} сражается {days} день..., осталось {enemies} воинов."
            )

            print(status)


# Создание и запуск рыцарей
knights = [
    Knight("Sir Lancelot", 10),
    Knight("Sir Galahad", 20)
]

for knight in knights:
    knight.start()

# Ожидание завершения всех потоков
for knight in knights:
    knight.join()

print("\nВсе битвы закончились!")
